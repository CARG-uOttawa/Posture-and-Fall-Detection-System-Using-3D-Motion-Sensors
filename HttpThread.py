# from PyQt4.QtCore import QThread
import json, http.client
import threading
import time

class HttpThread(threading.Thread):
    threadAbort = False
    def __init__(self, QDataDict, stopHttpThread):
        threading.Thread.__init__(self)
        self.QData = QDataDict
        self.stopEvent = stopHttpThread;
        self.headers = {'content-type': "application/json"}

    def __del__(self):
        self.wait()

    def run(self):
        while not self.stopEvent.is_set():
            data = {}
            if not self.QData.empty():
                if self.QData.qsize() > 4:
                    print("Warning! Queue size is exceeded")
                #data["device"] = self.QData.get()
                data = self.QData.get()
             #   print('data == ' + str(data))
                payload = json.dumps(data) #json.dumps(data)
              #  print('payload= ' + str(payload))
                # payload = "{\"device\":{\"BreathingRate\":17.74893569946289,\"Range\":2.7486701011657715,\"Posture\":\"Undefined\",\"BreathingSignal\":[6.985184430874369e-9,6.330555635258861e-9,7.157815673508594e-9,7.911483024258814e-9,7.875763152753734e-9,7.374374888513557e-9,7.015416692013332e-9,7.173757587963792e-9,7.498830889574037e-9,7.442994665041169e-9,7.224531195504369e-9,5.150253556962525e-9,8.024080067059458e-9,1.0601049815761598e-8,9.705762415990193e-9,9.805296130593888e-9,1.1188506121584396e-8,1.2873158539150609e-8,1.4156393390862831e-8,1.5825309063188797e-8,9.145478152561282e-9,9.099565545511723e-9,9.743410522844442e-9,1.0424122010022074e-8,7.280067215731378e-9,7.416593117426373e-9,9.555063407162834e-9,7.230026355387054e-9,1.1023949753052875e-8,1.0749184653491284e-8,1.4078337606804325e-8,1.134401994562495e-8,8.689548636198197e-9,8.685411501119233e-9,1.1897300034036107e-8,1.0803648642365715e-8,7.705909688127122e-9,5.3490061269201306e-9,6.61293997339385e-9,1.1565325586104791e-8,1.1386807940994004e-8,7.395165368961898e-9,3.538638271294303e-9,4.883679682876618e-9,7.879194185989036e-9,7.942426272222747e-9,1.30580604107422e-8,1.2884607158980543e-8,1.1852573145176848e-8,1.1949706113512093e-8,1.1328645577179941e-8,9.730609207281304e-9,8.14924128178518e-9,8.313377541924183e-9,8.452812672032906e-9,9.184379479165727e-9,9.271959200418678e-9,7.915307520534043e-9,7.987247307994494e-9,8.472959223126963e-9,9.1793648238081e-9,8.31934077183405e-9,8.359107184219283e-9,8.719739597040643e-9,8.685201002833765e-9,8.290849784486909e-9,8.848277666118065e-9,9.860886329704499e-9,1.062269561202811e-8,1.0682772888515046e-8,1.0867576172302051e-8,1.0748646417368946e-8,1.1092821772251682e-8,1.0890376600514173e-8,1.0922422077896954e-8,1.1098517660457219e-8,1.1042525116522484e-8,1.070381916434826e-8,1.0776849634908103e-8,1.0889372070721492e-8,1.0606222566877932e-8,1.053102582915244e-8,1.0257791949186412e-8,1.0351316248602416e-8,1.0230818858758539e-8,9.981753201770971e-9,9.7785433084141e-9,9.840070092081987e-9,9.169372816586474e-9,9.289321312166976e-9,8.58169979522927e-9,7.969905624349849e-9,7.8184045904095e-9,8.29377899691508e-9,8.604764900610462e-9,9.247439258786017e-9,9.57246104604792e-9,9.794463906587225e-9,9.89195125811193e-9,9.833341252374339e-9,9.771694564619793e-9,9.792333166558365e-9,9.994570504545663e-9,1.0438643727184171e-8,1.0637753788955706e-8,1.0406100869886359e-8,1.0319892496113425e-8,1.0076213641241338e-8,1.0084627355411158e-8,9.992117355750452e-9,9.505437326140509e-9,9.206654993931807e-9,8.745616675298606e-9,8.930035377829881e-9,8.9653466872619e-9,9.755989793802655e-9,1.03893356140361e-8,1.0291382857019471e-8,1.0332366962018114e-8,1.0401038252894068e-8,1.0103713421472094e-8,1.0043969211892545e-8,1.0044748144366622e-8,1.0089041602157067e-8,1.0120261073609527e-8,1.005396299547101e-8,9.9813126652748e-9,1.0220168711327915e-8,1.0082349177764627e-8,1.025264673160109e-8,1.0242186654352281e-8,1.0325940102973163e-8,1.0335913458447976e-8,1.0313103260273238e-8,1.0144079354290625e-8,9.83644810048645e-9,9.86903003763473e-9,9.68231628206695e-9,9.502951314743768e-9,9.452437055301743e-9,9.170743275888071e-9,9.32547550291929e-9,9.046181581595647e-9,8.943735529953756e-9,8.710765442287993e-9,8.724600597531662e-9,8.38378788614591e-9,8.186156641443176e-9,7.884316310935446e-9,7.857157591217856e-9,7.825735615085705e-9,7.63710872320189e-9,7.881829411360286e-9,8.262636796985134e-9,8.128067108259529e-9,8.134508178159194e-9,7.970728965744911e-9,8.36628277767204e-9,8.606068746530582e-9,8.920307159598906e-9,9.223254160417582e-9,9.133519718318439e-9,9.49018197360374e-9,9.543150270019396e-9,9.530144673419727e-9,9.48532097311272e-9,9.568295489259526e-9,9.609590456705064e-9,9.893469155031198e-9,9.799280498157259e-9,9.836376158034454e-9,9.895906316614855e-9,9.921876653606887e-9,9.954172597304023e-9,9.883829754642193e-9,1.0047372711596836e-8,1.0000599459658588e-8,1.009181804789705e-8,1.0186611554274805e-8,1.0197191535610273e-8,1.0204511013967021e-8,1.0310494680254578e-8,1.0293083718693197e-8,1.0284717077979622e-8,1.0223630830807906e-8,1.0132814587393568e-8,9.895720687325138e-9,9.743935436290485e-9,1.0024665542118782e-8,1.0041635967183993e-8,1.0340190037538832e-8,1.037742514142792e-8,1.037763297517813e-8,1.0628598445805437e-8,1.072600586127237e-8,1.0438348851948831e-8,9.91920323656359e-9,1.0390357907397174e-8,1.0660679450325006e-8,1.062216536951155e-8,1.0776260772615842e-8,1.0972099673267621e-8,1.1281489520342802e-8,1.177686481668161e-8,1.147401640366752e-8,1.0325909904906894e-8,8.648253668752659e-9,8.90711238099584e-9,8.705897336369617e-9,8.283665309249955e-9,8.31711677307112e-9,8.386507488467032e-9,6.9083303522177175e-9,7.01734848007618e-9,8.532042627962255e-9,9.068247486254677e-9,8.996072331513005e-9,8.176591848041426e-9,7.315913652661266e-9,7.0719337053049e-9,6.939930852212228e-9,6.806453178853644e-9,6.935086727111184e-9,6.663584350974361e-9,7.232063836681846e-9,7.762415599188444e-9,7.737799734286455e-9,8.006800555904192e-9,7.998358420024942e-9,8.218411728933006e-9,8.770769888144514e-9,9.082361529522132e-9,9.557283853212084e-9,9.744549167578498e-9,1.0703748998253104e-8,1.1097829322181951e-8,1.1614877060139861e-8,1.1733745530762008e-8,1.1556883450225541e-8,1.1272161870579112e-8,1.1061922933208734e-8,1.1573217051363827e-8,1.259024084987459e-8,1.2131388338332272e-8,1.036415842037286e-8,8.44764524998709e-9,8.174848353803554e-9,8.259136485833096e-9,8.673206153275714e-9,8.80066419739478e-9,8.217805103072351e-9,8.625700154141214e-9,8.584400745803578e-9,8.953723984461703e-9,8.615835156433604e-9,8.480466995308689e-9,8.71661143264646e-9,8.817361951685143e-9,9.41314581837105e-9,1.010097072651206e-8,1.0149280527116389e-8,1.0049440390957898e-8,1.0116881554722568e-8,1.0075595469061227e-8,9.932812794488655e-9,1.0234995073687969e-8,1.0198904831781874e-8,1.0452868792754089e-8,1.0225143398656655e-8,9.98069005220259e-9,1.0287848795087484e-8,1.052160758518994e-8,1.0581286069566431e-8,1.0547680950878657e-8,1.0531786998058124e-8,1.0641075576245385e-8,1.0732575717042891e-8,1.0799149130491514e-8,1.0764652280670362e-8,1.1118852505376253e-8,1.0852095222446678e-8,1.0742487788206745e-8,1.0885919721204118e-8,1.0927894145140726e-8,1.0733270272567097e-8,1.0576338915768702e-8,1.061754328901543e-8,1.064117682858523e-8,1.0853537624200271e-8,1.1096132013221904e-8,1.0697309704710278e-8,1.090661783109681e-8,1.0677879025422499e-8,1.0987836418507868e-8,1.0899737112879393e-8,1.1066610738907912e-8,1.0840328634742491e-8,1.1092078366914393e-8,1.0963298713306813e-8,1.1260277155145104e-8,1.1033787217229474e-8,1.1064671845417706e-8,1.1143225009391244e-8,1.1234834396134374e-8,1.1130151023053259e-8,1.1090955709391892e-8,1.095447910159919e-8,1.09923599111994e-8,1.0985317544509599e-8,1.1243090014545487e-8,1.1230460117417351e-8,1.105441249649175e-8,1.1520732812186907e-8,1.1212557105011456e-8,1.1306302560853965e-8,1.1090224738552479e-8,1.1126789267734694e-8,1.1101139563152174e-8,1.0853561605017603e-8,1.0740493827654518e-8,1.0873055344973181e-8,1.0592737353931625e-8,1.0459957344721715e-8,1.0578914633185832e-8,1.0570169628465464e-8,1.0622896340350962e-8,1.081708145278526e-8,1.0936362926372567e-8,1.089065193582428e-8,1.0942696526683449e-8,1.119847592434553e-8,1.1205097294464395e-8,1.1536493538244486e-8,1.1392882193206333e-8,1.1248110887152052e-8,1.1302809355129284e-8,1.1589506243581127e-8,1.1380655529080741e-8,1.158306872639514e-8,1.1659421872423081e-8],\"Activity\":\"stationary\"}}"
                self.conn = http.client.HTTPSConnection("arcane-badlands-33488.herokuapp.com")
                self.conn.request("POST", "/api/camera", payload, self.headers)
                res = self.conn.getresponse()
               # print('response= ' + str(res))
              #  print(res.status, res.read())
                self.conn.close()
            time.sleep(0.2)
